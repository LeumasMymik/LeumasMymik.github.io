---
layout: post
title:  "2020/09/11 Blog 1"
date:   2020-09-10 12:40:45 -0700
categories: Senior-Design
---
<html>
<style>
	html, body, h1, h2, h3, h4, h5, h6, p {
		font-family:  "Courier";
	}

	pre code {
                font-family: Consolas,"courier new";
		color: #666666;
		background-color: #ffe9ec;
		padding: 2px;
		padding-right: 7px;
        }
	
	body {
		background-color:#cce9ff;
	}

	.site-header {
		background-color:#ffe9ec;
	}

	.site-footer {
		background-color:#ffe9ec;
	}
</style>

<body>
<h1><b>Introduction</b></h1>
<p>This is Blog 1, and it will cover the Docker lab that we were assigned for our class.</p>
<br>

<h1><b>Installing <a href="https://docs.docker.com/get-docker/">Docker</a></b></h1>
<p><a href="https://docs.docker.com/get-docker/">Docker</a> is a tool that lets you create virtual containers to run and test certain applications and services.</p>
<p>To install Docker, on <a href="https://docs.docker.com/docker-for-windows/install/">Windows</a> there are some requirements. Some important requirements to keep in mind when installing Docker on Windows would be to enable <code>Hyper-v</code> and to enable <code>Containers</code> Windows features. Other than that you may need to enable the WSL 2 feature on Windows and download the <a href="https://docs.microsoft.com/en-us/windows/wsl/wsl2-kernel">Linux Kernel update package</a>.</p>
<p>Once you have all of the requirements met, installing Docker is very straight forward, you can use this <a href="https://docs.docker.com/docker-for-windows/install/">link</a> to download Docker for Windows through the Docker Hub.</p>

<h1><b><a href="https://canvas.csun.edu/courses/81715/files/10176009/download?wrap=1">Lab 1: LAMP Stack</a></b></h1>
<p>Once you have Docker installed, you can begin working on the lab. The lab itself was fairly easy, it was mainly just installing various packages and services, such as apache2, and testing to see if they were properly installed by starting the services and checking our localhost and the port that we set in the beginning.</p>

<h1><b>Issues</b></h1>
<p>I ran into some issues trying to download some PHP dependencies. The dependencies I had were as listed below:</p>
<p><code># PHP Dependencies: php7.2-cli, php7.2-curl, php7.2-gd, php7.2-mbstring, php7.2-mysql, and php7.2-xml</code></p>
<p>The command we were instructed to run was:</p>
<pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ apt-get install -y php libapache2-mod-php php-mysql php7.2-cli php7.2-curl php7.2-gd php7.2-mbstring php7.2-mysql php7.2-xml php-xml</pre>
<p>But, when I tried to run the command above, I was hit with these error messages:</p>
<pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ apt-get install -y php libapache2-mod-php php-mysql php7.2-cli php7.2-curl php7.2-gd php7.2-mbstring php7.2-mysql php7.2-xml php-xml<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E: Unable to locate package php7.2-cli<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E: Couldn't find any package by glob 'php7.2-cli'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E: Couldn't find any package by regex 'php7.2-cli'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E: Unable to locate package php7.2-curl<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E: Couldn't find any package by glob 'php7.2-curl'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E: Couldn't find any package by regex 'php7.2-curl'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E: Unable to locate package php7.2-gd<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E: Couldn't find any package by glob 'php7.2-gd'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E: Couldn't find any package by regex 'php7.2-gd'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E: Unable to locate package php7.2-mbstring<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E: Couldn't find any package by glob 'php7.2-mbstring'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E: Couldn't find any package by regex 'php7.2-mbstring'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E: Unable to locate package php7.2-mysql<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E: Couldn't find any package by glob 'php7.2-mysql'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E: Couldn't find any package by regex 'php7.2-mysql'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E: Unable to locate package php7.2-xml<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E: Couldn't find any package by glob 'php7.2-xml'<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E: Couldn't find any package by regex 'php7.2-xml'<br></pre>
<p>So from the looks of it, it looked like my Docker container was having a bit of trouble finding the 7.2 version specific PHP dependencies. To try and resolve these errors, I tried manually adding the ondrej PPA from a thread that I had found on <a href="https://stackoverflow.com/questions/50947291/error-while-installing-php-7-2-in-ubuntu-17-04">Stack Overflow</a>, and from which I tried the following commands to no avail:</p>
<pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ add-apt-repository ppa:ondrej/php<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ apt-get update<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ apt-get install php7.2</pre>
<p>It seemed like when running these commands, my container could not locate the specified repository, so I skipped that command and updated successfully, and the command to install php7.2 ran and successfully installed, but when i went to check my php version <code>php -v</code> it did not show up as version 7.2, but it came up as version 7.4.</p>
<p>The next thing I tried came from a guide on <a href="https://tecadmin.net/install-php-7-on-ubuntu/">Installing PHP on Ubuntu</a> that I had found through various Google searches. Following the guide I ran the following code, also to no avail:</p>
<pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ apt-get install software-properties-common<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ add-apt-repository ppa:ondrej/php<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ apt-get update<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ apt-get install -y php7.2</pre>
<p>This solution was basically the same as the one I had found on Stack Overflow except it had an extra command, which did run successfully, but again my container could not locate the repository, and the update and install commands ran successfully, but the cersion remained as 7.4.</p>
<p>To move past these errors, I ran the command without the specified versions, so for example:</p>
<pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ apt-get install -y php libapache2-mod-php php-mysql php-cli php-curl php-gd php-mbstring php-mysql php-xml php-xml</pre>
<p>With the issue assumed to be resolved, I followed the steps listed and changed specified files and cloned a GitHub repository. Once I had reached the end, I ran the last command <code>composer install</code>, which ran successfully, but when I tried to test it by opening up my <code>localhost:8080</code>, the page would not load and it gave me a message that something had gone wrong.</p>

<h1><b>Solution?</b></h1>
<p>I deleted and reattempted this lab 4 separate times and all 4 times, I had gotten the same errors and tried the same solutions, which ended in the same result. Finally, the absolute genius that I was, doing the same exact thing and expecting a different result everytime, had the big brain, 5head, idea to try and attempt the lab on a different device. So I tried it on my mac, and thought might as well, I have already done the exercise 4 times already, albeit unsuccessfully, and I attempted the lab, doing exactly as I had before... and it worked.</p>
<img src="https://raw.githubusercontent.com/LeumasMymik/LeumasMymik.github.io/master/docs/macsuccess.png">
<br>
<p>With the lab now completed, I went to write this blog post, and wanting to include the exact error messages that I had gotten, I had reattempted the lab on my pc in a fresh Docker container, since I deleted the previous containers out of frustration, to try and get the exact errors that I had gotten the previous 4 times that I had attempted the lab, and low and behold this absolute joke of a computer finally decides to work.</p>
<img src="https://raw.githubusercontent.com/LeumasMymik/LeumasMymik.github.io/master/docs/windowssuccess.png">
<br>

<h1><b>Conclusion</b></h1>
<p>In all honesty, I have no idea what I did, or what I didn't do that made this work. It just worked maybe, I had created the container incorrectly the previous times, or maybe something had updated while I was away from the computer, I have no idea what had happened differently this time around for it to install the PHP dependencies successfully. In moments like these, I feel like you just have to take the win and maybe years down the line something will click and you'll realize what you did wrong, but I could bet on my life that I had followed the lab and put in the commands word for word, bar for bar each and everytime I had attempted it. </p>
</body>
</html>
