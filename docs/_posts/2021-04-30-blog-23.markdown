---
layout: post
title:  "2021/04/30 Blog 23"
date:   2021-04-25 12:40:45 -0700
categories: Senior-Design
---
<html>
<style>
	html, body, h1, h2, h3, h4, h5, h6, p {
		font-family:  "Courier";
	}

	pre code {
                font-family: Consolas,"courier new";
		color: #666666;
		background-color: #ffe9ec;
		padding: 2px;
		padding-right: 7px;
        }
	
	body {
		background-color:#cce9ff;
	}

	.site-header {
		background-color:#ffe9ec;
	}

	.site-footer {
		background-color:#ffe9ec;
	}

	.row {
 		display: flex;
	}

	.column {
  		flex: 33.33%;
  		padding: 20px;
	}
	
	.scalable {
		width: 50%;
		height: auto;
	}
</style>

<body>
<h1><b>Count Items Matching a Rule</b></h1>
<p>This blog will document the steps for solving the LeetCode problem 1773. Count Items Matching a Rule using python as our programming language.</p>
<br>

<h1><b>Prompt</b></h1>
<p>The prompt states that given an array where each item in the array describes either a type, color, and name of an item, as well as a rule that represents a rulekey and a rulevalue.</p>
<p>Given the rulekey and rulevalue, we need to output the number of items that match the given rule.</p>
<p>For example:</p>
<pre>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Input: items = [["phone","blue","pixel"],["computer","silver","lenovo"],["phone","gold","iphone"]], ruleKey = "color", ruleValue = "silver"
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Output: 1
</pre>
<p>Another Example:</p>
<pre>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Input: [["phone","blue","pixel"],["computer","silver","phone"],["phone","gold","iphone"]], ruleKey = "type", ruleValue = "phone"
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Output: 2
</pre>
<br>

<h1><b>For Loop</b></h1>
<p>To get started I created a variable count with a value of 0 to act as our placeholder counter to hold our output of the number of matching items.</p>
<p>Then I created a for loop to run based on every item within the array.</p>
<p>For Example:</p>
<pre>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class Solution:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def countMatches(self, items: List[List[str]], ruleKey: str, ruleValue: str) -> int:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count = 0
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for x in items:
</pre>
<br>

<h1><b>Conditions</b></h1>
<p>To find whether or not the rulekey and rulevalue matched that of the given values within the array, I created if statements that checked each value within the array and compared them with the given categories either type, color, or array.</p>
<p>Then if the statement was true I made our count variable increase by a value of 1 to count an item that matched the given rule.</p>
<p>For Example:</p>
<pre>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class Solution:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def countMatches(self, items: List[List[str]], ruleKey: str, ruleValue: str) -> int:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count = 0
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for x in items:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ruleKey == "type" and ruleValue == x[0]:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count += 1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elif ruleKey == "color" and ruleValue == x[1]:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count += 1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elif ruleKey == "name" and ruleValue == x[2]:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count += 1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(count)
</pre>
<br>
<p>Lastly, to output our result we can return the variable count that is filled with the value of each item that matches the given rule.</p>
</body>
</html>
